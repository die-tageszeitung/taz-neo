image: registry.gitlab.alt.coop/ctrlaltcoop/android-docker:v0.0.1

variables:
  SENTRY_ENVIRONMENT: official
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: recursive
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"

stages:
  - buildTests
  - test
  - build
  - publish

.prepareEnv:
  stage: build
  cache:
    # This cache includes the gradle wrapper and caches.
    # It is shared between all branches and jobs.
    - key: android-base
      paths:
        - $GRADLE_USER_HOME/wrapper
        - $GRADLE_USER_HOME/caches
    - key:
        files:
          - .git/modules/mupdf-lib/HEAD
      paths:
        - mupdf-lib/jni/libmupdf/generated/resources/
        - mupdf-lib/jni/build

  before_script:
    # Download and extract non-free fonts used by the app
    - curl -u "${BUNDLE_SHARETOKEN_AND_PASS}" "https://cloud.alt.coop/public.php/webdav" -o bundle.tar
    - sudo tar --same-owner -xf bundle.tar
    - sudo chown -R circleci:circleci .

    # Setup the keystore from the CI secret variables
    - echo "keystorePassword=${ANDROID_KEYSTORE_PASSWORD/\\/\\\\}" >> keystore.properties
    - echo "keyPassword=${ANDROID_KEYSTORE_KEY_PASSWORD/\\/\\\\}" >> keystore.properties
    - make -C mupdf-lib/jni/libmupdf generate

.assemble:
  extends: .prepareEnv
  artifacts:
    paths:
      - app/build/outputs/

assembleAllFlavors:
  extends: .assemble
  interruptible: true
  script:
    - ./gradlew assembleNonfreeTazProductionDebug
    - ./gradlew assembleNonfreeTazProductionRelease
    - ./gradlew assembleFreeTazProductionDebug
    - ./gradlew assembleFreeTazStagingDebug
    - ./gradlew assembleFreeTazProductionManualUpdateRelease
    - ./gradlew assembleFreeTazProductionUnminifiedRelease

lint:
  extends: .prepareEnv
  interruptible: true
  stage: test
  script:
    - ./gradlew --no-daemon --console=plain lintNonFreeTazProductionDebug lintNonfreeTazProductionRelease

  artifacts:
    paths:
      - app/build/outputs/

unitTests:
  extends: .prepareEnv
  interruptible: true
  stage: test
  script:
    - ./gradlew --no-daemon --console=plain :app:testNonfreeTazProductionDebugUnitTest

integrationTests:
  extends: .prepareEnv
  stage: test
  interruptible: true
  script:
    - sudo -E ${ANDROID_HOME}/emulator/emulator @test -no-boot-anim -no-window &
    - sleep 30 && ./gradlew --no-daemon -Pci --console=plain :app:connectedNonfreeTazProductionDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.notAnnotation=de.taz.app.android.suite.UiTestSuite
  tags:
    - kvm-enabled


# UI Tests are disabled until we actually buy a device farm
.uiTests:
  extends: .prepareEnv
  stage: test
  variables:
    SENTRY_ENVIRONMENT: automatedTests
  script:
    - ./gradlew --no-daemon -Pci --console=plain :app:assembleNonfreeTazProductionDebug
    - ./gradlew --no-daemon -Pci --console=plain :app:assembleNonfreeTazProductionDebugAndroidTest
    - ./scripts/ui-tests-bitbar.sh app/build/outputs/apk/nonfreeTazProduction/debug/app-nonfree-taz-production-debug.apk app/build/outputs/apk/androidTest/nonfreeTazProduction/debug/app-nonfree-taz-production-debug-androidTest.apk 207052460
  only:
    - merge_requests
    - master


publishNextcloud:
  cache: {}
  stage: publish
  variables:
    RELEASE_FOLDER: releases/${CI_COMMIT_TAG}
    NONFREE_DEBUG_APK_PATH: releases/${CI_COMMIT_TAG}/app-nonfree-taz-production-debug.apk
    NONFREE_RELEASE_APK_PATH: releases/${CI_COMMIT_TAG}/app-nonfree-taz-production-release.apk
    FREE_DEBUG_APK_PATH: releases/${CI_COMMIT_TAG}/app-free-taz-production-debug.apk
    FREE_STAGING_DEBUG_APK_PATH: releases/${CI_COMMIT_TAG}/app-free-taz-staging-debug.apk
    FREE_RELEASE_APK_PATH: releases/${CI_COMMIT_TAG}/app-free-taz-production-unminifiedRelease.apk
    FREE_MANUAL_UPDATE_RELEASE_APK_PATH: releases/${CI_COMMIT_TAG}/app-free-taz-production-manualUpdateRelease.apk
  script:
    - curl -X MKCOL "${NEXTCLOUD_RELEASE_URL}/remote.php/webdav/${RELEASE_FOLDER}" -u ${NEXTCLOUD_RELEASE_USER}:${NEXTCLOUD_RELEASE_PASSWORD}
    - curl -X PUT "${NEXTCLOUD_RELEASE_URL}/remote.php/webdav/${NONFREE_DEBUG_APK_PATH}" --data-binary @"app/build/outputs/apk/nonfreeTazProduction/debug/app-nonfree-taz-production-debug.apk" -u ${NEXTCLOUD_RELEASE_USER}:${NEXTCLOUD_RELEASE_PASSWORD}
    - curl -X PUT "${NEXTCLOUD_RELEASE_URL}/remote.php/webdav/${NONFREE_RELEASE_APK_PATH}" --data-binary @"app/build/outputs/apk/nonfreeTazProduction/release/app-nonfree-taz-production-release.apk" -u ${NEXTCLOUD_RELEASE_USER}:${NEXTCLOUD_RELEASE_PASSWORD}
    - curl -X PUT "${NEXTCLOUD_RELEASE_URL}/remote.php/webdav/${FREE_DEBUG_APK_PATH}" --data-binary @"app/build/outputs/apk/freeTazProduction/debug/app-free-taz-production-debug.apk" -u ${NEXTCLOUD_RELEASE_USER}:${NEXTCLOUD_RELEASE_PASSWORD}
    - curl -X PUT "${NEXTCLOUD_RELEASE_URL}/remote.php/webdav/${FREE_STAGING_DEBUG_APK_PATH}" --data-binary @"app/build/outputs/apk/freeTazStaging/debug/app-free-taz-staging-debug.apk" -u ${NEXTCLOUD_RELEASE_USER}:${NEXTCLOUD_RELEASE_PASSWORD}
    - curl -X PUT "${NEXTCLOUD_RELEASE_URL}/remote.php/webdav/${FREE_RELEASE_APK_PATH}" --data-binary @"app/build/outputs/apk/freeTazProduction/unminifiedRelease/app-free-taz-production-unminifiedRelease.apk" -u ${NEXTCLOUD_RELEASE_USER}:${NEXTCLOUD_RELEASE_PASSWORD}
    - curl -X PUT "${NEXTCLOUD_RELEASE_URL}/remote.php/webdav/${FREE_MANUAL_UPDATE_RELEASE_APK_PATH}" --data-binary @"app/build/outputs/apk/freeTazProduction/manualUpdateRelease/app-free-taz-production-manualUpdateRelease.apk" -u ${NEXTCLOUD_RELEASE_USER}:${NEXTCLOUD_RELEASE_PASSWORD}
    - ./scripts/publish-to-app-runde.sh
  only:
    - tags

publishGooglePlay:
  cache: {}
  extends: .prepareEnv
  stage: publish
  script:
    - ./gradlew publishNonfreeTazProductionReleaseBundle
  only:
    - tags
  when: manual
