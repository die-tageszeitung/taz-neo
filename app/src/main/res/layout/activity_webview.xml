<?xml version="1.0" encoding="utf-8"?>
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:context="de.taz.app.android.ui.WebViewActivity">

    <include
        android:id="@+id/web_view_loading_screen"
        layout="@layout/include_loading_screen" />

    <androidx.core.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@color/web_view_background">

        <!-- Attention:
            When using the default <android.webkit.WebView> the linter warns us, that
            > "Placing a <WebView> in a parent element that uses wrap_content can lead to subtle bugs;
            > use match_parent instead"
            This is also noted as a best practice at https://developer.android.com/develop/ui/views/layout/webapps/best-practices
            > "We discourage setting the height to wrap_content because it results in incorrect sizing.
            > Similarly, setting the layout width to wrap_content isn't supported and causes your
            > WebView to use the width of its parent instead. Because of this behavior, it's also
            > important to make sure none of your WebView object's parent layout objects have their
            > height and width set to wrap_content."

            As we are not yet aware of any bugs resulting from it, and rely on this behavior
            for scrolling, we keep the wrap_content.
        -->
        <de.taz.app.android.ui.webview.AppWebView
            android:id="@+id/web_view_fullscreen_content"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:layout_constraintTop_toTopOf="parent" />
    </androidx.core.widget.NestedScrollView>

    <ImageButton
        android:id="@+id/button_close"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@null"
        android:src="@drawable/ic_close"
        android:layout_marginTop="@dimen/ic_close_button_margin_top"
        android:layout_marginEnd="@dimen/ic_close_button_margin_end"
        android:layout_gravity="end"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        android:contentDescription="@string/button_close_text" />
</FrameLayout>

